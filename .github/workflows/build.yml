name: build

on:
  push:
    branches: [ main ]
    tags:
      - '*'           # Push events to every tag not containing /
  pull_request:
    branches: [ main ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-22.04, ubuntu-20.04, windows-latest, macos-latest]
        include:
          - os: ubuntu-22.04
            outputsuffix: ubuntu-2204
            archive_type: tar
            archive_extension: tar.gz
          - os: ubuntu-20.04
            outputsuffix: ubuntu-2004
            archive_type: tar
            archive_extension: tar.gz
          - os: macos-latest
            outputsuffix: mac
            archive_type: tar
            archive_extension: tar.gz
          - os: windows-latest
            outputsuffix: win
            archive_type: zip
            archive_extension: zip


    steps:
    - uses: actions/checkout@v3
      with:
        submodules: recursive

    - name: Cache vcpkg libraries
      if: runner.os == 'Windows'
      uses: actions/cache@v3
      with:
        path: |
          C:/vcpkg/installed
          C:/vcpkg/vcpkg
        key: ${{ runner.os }}-vcpkg-${{ hashFiles('**/vcpkg.json') }}


    - name: Install libjpeg-turbo (Windows)
      if: runner.os == 'Windows'
      run: |
        vcpkg install libjpeg-turbo

    - name: Configure CMake on Windows
      if: runner.os == 'Windows'
      run: cmake -S . -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} --toolchain="C:/vcpkg/scripts/buildsystems/vcpkg.cmake"

    - name: Configure CMake
      if: runner.os != 'Windows'
      run: cmake -S . -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel


    - name: Archive Release
      uses: thedoctor0/zip-release@0.7.0
      with:
        type: ${{matrix.archive_type}}
        filename: ${{github.workspace}}/lens_reproject_x64-avx2_${{matrix.outputsuffix}}.${{matrix.archive_extension}}
        directory: ${{github.workspace}}/
        path: ./build/bin

    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v3.1.2
      with:
        # Artifact name
        name: lens_reproject_${{ matrix.outputsuffix }}
        # A file, directory or wildcard pattern that describes what to upload
        path: ${{github.workspace}}/lens_reproject_x64-avx2_${{matrix.outputsuffix}}.${{matrix.archive_extension}}

    - name: Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: lens_reproject_x64-avx2_${{matrix.outputsuffix}}.${{matrix.archive_extension}}
        generate_release_notes: true
        append_body: true
